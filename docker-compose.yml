services:
  django_app:
    build: ./social_media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
    environment:
      - DATABASE_HOST=db
      - DATABASE_NAME=social_media
      - DATABASE_USER=root
      - DATABASE_PASSWORD=root
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./social_media:/app
    command: ["./entrypoint.sh"]

  flask_likes:
    build: 
      context: ./social_media_likes
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
      redis:
        condition: service_started
    environment:
      - DATABASE_HOST=db
      - DATABASE_NAME=social_media
      - DATABASE_USER=root
      - DATABASE_PASSWORD=root
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./social_media_likes:/app

  frontend:
    build:
      context: ./social_media_frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./social_media_frontend:/app
    depends_on:
      django_app: 
        condition: service_started
      flask_likes: 
        condition: service_started

  db:
    image: mysql:8
    environment:
      - MYSQL_DATABASE=social_media
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ROOT_HOST=%
    command: --bind-address=0.0.0.0
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  mysql_data:
  rabbitmq_data:
  redis_data: